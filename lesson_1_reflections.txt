How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It highlighted the differences between the two files and let us easily compare them and notice the changes.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It would allow you to quickyl hone in on the difference between two versions of a file, for example a working one and one that returns an error.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Each commit can be made to be a single logical change, which makes it easy to understand the purpose of each commit.

    Cons: User error could still result in illogical or confusing commits.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Becuase program files can be connected, one change could affect multiple files at the same time, and it is logical to reflect this with one commit.

How can you use the commands git log and git diff to view the history of files?

    git log shows the history of commits, and git diff compares differences between two versions.

How might using version control make you more confident to make changes that
could break something?

    Because you can easily go back and analyze your changes and see what went wrong after you broke everything!

Now that you have your workspace set up, what do you want to try using Git for?

    Conquering the world! Kidding, I just want to learn how to program...